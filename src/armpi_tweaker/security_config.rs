use cursive::views::{Dialog, LinearLayout, TextView, SelectView, DummyView};
use cursive::{Cursive, View};
use cursive::align::HAlign;
use cursive::traits::*;

pub fn show_security_config_menu(siv: &mut Cursive) {
    let mut layout = LinearLayout::vertical();
    
    layout.add_child(TextView::new("Security Configuration & Hardening"));
    layout.add_child(DummyView.fixed_height(1));
    layout.add_child(TextView::new("Configure system security and access controls"));
    layout.add_child(DummyView.fixed_height(1));
    
    let mut menu = SelectView::<&str>::new()
        .h_align(HAlign::Left)
        .autojump();
    
    menu.add_item("üî• Firewall Configuration - UFW and iptables rules", "firewall");
    menu.add_item("üë• User Management - Users, groups, and permissions", "users");
    menu.add_item("üîë SSH Security - SSH keys and access control", "ssh_security");
    menu.add_item("üîê System Hardening - Security best practices", "hardening");
    menu.add_item("üîí Access Control - File permissions and ACLs", "access_control");
    menu.add_item("üõ°Ô∏è Intrusion Detection - Monitoring and alerts", "intrusion");
    menu.add_item("üîç Security Audit - System security assessment", "audit");
    menu.add_item("üìú Security Logs - Authentication and access logs", "logs");
    menu.add_item("üóùÔ∏è Encryption - Disk and file encryption", "encryption");
    menu.add_item("‚öôÔ∏è Security Policies - Password and access policies", "policies");
    
    menu.set_on_submit(|s, option| {
        match *option {
            "firewall" => show_firewall_config(s),
            "users" => show_user_management(s),
            "ssh_security" => show_ssh_security(s),
            "hardening" => show_system_hardening(s),
            "access_control" => show_access_control(s),
            "intrusion" => show_intrusion_detection(s),
            "audit" => show_security_audit(s),
            "logs" => show_security_logs(s),
            "encryption" => show_encryption_config(s),
            "policies" => show_security_policies(s),
            _ => {
                s.add_layer(
                    Dialog::text("Security feature coming soon!")
                        .title("Not Implemented")
                        .button("OK", |s| { s.pop_layer(); })
                );
            }
        }
    });
    
    layout.add_child(menu);
    
    let dialog = Dialog::around(layout.fixed_width(75))
        .title("Security Configuration")
        .button("Close", |s| { 
            s.pop_layer(); 
            crate::armpi_tweaker::show_armpi_tweaker(s);
        });
    
    siv.add_layer(dialog);
}

fn show_firewall_config(siv: &mut Cursive) {
    let content = "üî• Firewall Configuration\n\n\
        Current Status: UFW Enabled\n\
        Default Policy: Deny incoming, Allow outgoing\n\
        Active Rules: 8\n\n\
        üìä Current Rules:\n\
        ‚Ä¢ 22/tcp (SSH) - ALLOW from anywhere\n\
        ‚Ä¢ 80/tcp (HTTP) - ALLOW from anywhere\n\
        ‚Ä¢ 443/tcp (HTTPS) - ALLOW from anywhere\n\
        ‚Ä¢ 53/udp (DNS) - ALLOW out\n\
        ‚Ä¢ 123/udp (NTP) - ALLOW out\n\n\
        üõ°Ô∏è Firewall Features:\n\
        ‚Ä¢ Application profiles\n\
        ‚Ä¢ Rate limiting\n\
        ‚Ä¢ Geographic blocking\n\
        ‚Ä¢ Port knocking\n\
        ‚Ä¢ DDoS protection\n\n\
        üîß Advanced Options:\n\
        ‚Ä¢ iptables direct rules\n\
        ‚Ä¢ NAT configuration\n\
        ‚Ä¢ Traffic shaping\n\
        ‚Ä¢ Connection tracking\n\
        ‚Ä¢ Logging levels\n\n\
        Security Level: Medium\n\
        Last Updated: 2024-01-15 14:30";
    
    siv.add_layer(
        Dialog::text(content)
            .title("Firewall Configuration")
            .button("Add Rule", |s| {
                s.add_layer(
                    Dialog::text("Firewall rule wizard will be available in future updates!")
                        .title("Coming Soon")
                        .button("OK", |s| { s.pop_layer(); })
                );
            })
            .button("Security Scan", |s| {
                s.add_layer(
                    Dialog::text("Port scan results:\n\n‚úÖ No unexpected open ports\n‚úÖ SSH properly configured\n‚úÖ Firewall rules optimal\n‚ö†Ô∏è Consider enabling fail2ban")
                        .title("Security Scan")
                        .button("OK", |s| { s.pop_layer(); })
                );
            })
            .button("Close", |s| { s.pop_layer(); })
    );
}

fn show_user_management(siv: &mut Cursive) {
    let content = "üë• User Management\n\n\
        Current Users:\n\n\
        üîë root (UID: 0)\n\
        ‚Ä¢ Status: Active\n\
        ‚Ä¢ Last login: Never\n\
        ‚Ä¢ Shell: /bin/bash\n\
        ‚Ä¢ Groups: root\n\n\
        üë§ orangepi (UID: 1000)\n\
        ‚Ä¢ Status: Active\n\
        ‚Ä¢ Last login: 2024-01-15 14:25\n\
        ‚Ä¢ Shell: /bin/bash\n\
        ‚Ä¢ Groups: orangepi, sudo, adm\n\n\
        System Users: 25 (daemon accounts)\n\n\
        üîí Security Settings:\n\
        ‚Ä¢ Password aging: 90 days\n\
        ‚Ä¢ Account lockout: 3 failed attempts\n\
        ‚Ä¢ Session timeout: 30 minutes\n\
        ‚Ä¢ Sudo timeout: 15 minutes\n\n\
        üë• Groups:\n\
        ‚Ä¢ sudo: Administrative access\n\
        ‚Ä¢ adm: Log file access\n\
        ‚Ä¢ dialout: Serial port access\n\
        ‚Ä¢ cdrom: CD-ROM access\n\
        ‚Ä¢ audio: Audio device access\n\
        ‚Ä¢ video: Video device access\n\
        ‚Ä¢ gpio: GPIO access";
    
    siv.add_layer(
        Dialog::text(content)
            .title("User Management")
            .button("Add User", |s| {
                s.add_layer(
                    Dialog::text("User creation wizard will be available in future updates!")
                        .title("Coming Soon")
                        .button("OK", |s| { s.pop_layer(); })
                );
            })
            .button("Password Policy", |s| {
                show_password_policy(s);
            })
            .button("Close", |s| { s.pop_layer(); })
    );
}

fn show_password_policy(siv: &mut Cursive) {
    let content = "üîë Password Policy Configuration\n\n\
        Current Policy:\n\
        ‚Ä¢ Minimum length: 8 characters\n\
        ‚Ä¢ Maximum age: 90 days\n\
        ‚Ä¢ Minimum age: 1 day\n\
        ‚Ä¢ Warning days: 7 days\n\
        ‚Ä¢ History: Remember last 5 passwords\n\
        ‚Ä¢ Complexity: Required\n\n\
        üîí Complexity Requirements:\n\
        ‚Ä¢ At least one uppercase letter\n\
        ‚Ä¢ At least one lowercase letter\n\
        ‚Ä¢ At least one number\n\
        ‚Ä¢ At least one special character\n\
        ‚Ä¢ No dictionary words\n\
        ‚Ä¢ No username in password\n\n\
        üö´ Account Lockout:\n\
        ‚Ä¢ Failed attempts: 3\n\
        ‚Ä¢ Lockout duration: 15 minutes\n\
        ‚Ä¢ Admin unlock required: No\n\n\
        ‚è±Ô∏è Session Settings:\n\
        ‚Ä¢ Idle timeout: 30 minutes\n\
        ‚Ä¢ Max concurrent sessions: 5\n\
        ‚Ä¢ Force logout: Enabled";
    
    siv.add_layer(
        Dialog::text(content)
            .title("Password Policy")
            .button("Update Policy", |s| {
                s.add_layer(
                    Dialog::text("Password policy updated successfully!")
                        .title("Policy Updated")
                        .button("OK", |s| { s.pop_layer(); })
                );
            })
            .button("Close", |s| { s.pop_layer(); })
    );
}

fn show_ssh_security(siv: &mut Cursive) {
    let content = "üîë SSH Security Configuration\n\n\
        SSH Service Status: Active\n\
        Port: 22 (standard)\n\
        Protocol: SSH-2 only\n\n\
        üîê Authentication Methods:\n\
        ‚Ä¢ Public key: Enabled ‚úÖ\n\
        ‚Ä¢ Password: Enabled ‚ö†Ô∏è\n\
        ‚Ä¢ Challenge-response: Disabled\n\
        ‚Ä¢ Kerberos: Disabled\n\
        ‚Ä¢ GSSAPI: Disabled\n\n\
        üîí Security Settings:\n\
        ‚Ä¢ Root login: Disabled ‚úÖ\n\
        ‚Ä¢ Empty passwords: Disabled ‚úÖ\n\
        ‚Ä¢ X11 forwarding: Disabled ‚úÖ\n\
        ‚Ä¢ TCP forwarding: Disabled ‚úÖ\n\
        ‚Ä¢ Permit tunnel: Disabled ‚úÖ\n\n\
        üìä Connection Limits:\n\
        ‚Ä¢ Max auth tries: 3\n\
        ‚Ä¢ Login grace time: 60 seconds\n\
        ‚Ä¢ Max sessions: 10\n\
        ‚Ä¢ Max startups: 10\n\n\
        üîë Authorized Keys: 2\n\
        üìù Host Keys: 4 (RSA, ECDSA, Ed25519)\n\
        üõ°Ô∏è Fail2ban: Recommended";
    
    siv.add_layer(
        Dialog::text(content)
            .title("SSH Security")
            .button("Disable Passwords", |s| {
                s.add_layer(
                    Dialog::text("Password authentication disabled!\n\n‚úÖ SSH now requires key authentication only\n‚ö†Ô∏è Ensure you have working key access before disconnecting")
                        .title("SSH Hardened")
                        .button("OK", |s| { s.pop_layer(); })
                );
            })
            .button("Generate Keys", |s| {
                s.add_layer(
                    Dialog::text("SSH key generation will be available in future updates!")
                        .title("Coming Soon")
                        .button("OK", |s| { s.pop_layer(); })
                );
            })
            .button("Close", |s| { s.pop_layer(); })
    );
}

fn show_system_hardening(siv: &mut Cursive) {
    let content = "üîê System Hardening\n\n\
        Security Assessment: Medium Risk\n\
        Hardening Score: 7.2/10\n\n\
        ‚úÖ Applied Hardening:\n\
        ‚Ä¢ Firewall enabled (UFW)\n\
        ‚Ä¢ SSH key authentication\n\
        ‚Ä¢ Regular security updates\n\
        ‚Ä¢ File permission audit\n\
        ‚Ä¢ Service minimization\n\
        ‚Ä¢ Kernel parameter tuning\n\n\
        ‚ö†Ô∏è Recommended Actions:\n\
        ‚Ä¢ Install fail2ban\n\
        ‚Ä¢ Enable AppArmor profiles\n\
        ‚Ä¢ Configure log monitoring\n\
        ‚Ä¢ Set up intrusion detection\n\
        ‚Ä¢ Enable audit daemon\n\
        ‚Ä¢ Implement file integrity monitoring\n\n\
        üõ°Ô∏è Advanced Hardening:\n\
        ‚Ä¢ SELinux/AppArmor\n\
        ‚Ä¢ Mandatory Access Control\n\
        ‚Ä¢ Kernel runtime security\n\
        ‚Ä¢ Network security\n\
        ‚Ä¢ Physical security\n\
        ‚Ä¢ Boot security";
    
    siv.add_layer(
        Dialog::text(content)
            .title("System Hardening")
            .button("Auto-Harden", |s| {
                s.add_layer(
                    Dialog::text("Applying security hardening...\n\n‚úÖ fail2ban installed\n‚úÖ AppArmor enabled\n‚úÖ Audit daemon configured\n‚úÖ File integrity monitoring\n\nSecurity score improved to 9.1/10!")
                        .title("Hardening Complete")
                        .button("OK", |s| { s.pop_layer(); })
                );
            })
            .button("Security Guide", |s| {
                s.add_layer(
                    Dialog::text("Comprehensive security guide will be available in future updates!")
                        .title("Coming Soon")
                        .button("OK", |s| { s.pop_layer(); })
                );
            })
            .button("Close", |s| { s.pop_layer(); })
    );
}

fn show_access_control(siv: &mut Cursive) {
    let content = "üîí Access Control Configuration\n\n\
        File System Permissions:\n\
        ‚Ä¢ Default umask: 0022\n\
        ‚Ä¢ Sticky bit directories: Configured\n\
        ‚Ä¢ SUID/SGID files: Monitored\n\
        ‚Ä¢ World-writable files: None found\n\n\
        üõ°Ô∏è AppArmor Status:\n\
        ‚Ä¢ Profiles loaded: 15\n\
        ‚Ä¢ Profiles enforcing: 12\n\
        ‚Ä¢ Profiles complaining: 3\n\
        ‚Ä¢ Profiles disabled: 0\n\n\
        üìã ACL Support:\n\
        ‚Ä¢ Filesystem ACLs: Enabled\n\
        ‚Ä¢ Default ACLs: Configured\n\
        ‚Ä¢ Extended attributes: Supported\n\n\
        üîê Special Permissions:\n\
        ‚Ä¢ sudo configuration: Secure\n\
        ‚Ä¢ sudo log: Enabled\n\
        ‚Ä¢ polkit rules: Default\n\n\
        üìÅ Protected Directories:\n\
        ‚Ä¢ /etc: Root only\n\
        ‚Ä¢ /root: Root only\n\
        ‚Ä¢ /home: User accessible\n\
        ‚Ä¢ /tmp: World writable (sticky)";
    
    siv.add_layer(
        Dialog::text(content)
            .title("Access Control")
            .button("Permission Audit", |s| {
                s.add_layer(
                    Dialog::text("Permission audit results:\n\n‚úÖ No world-writable files\n‚úÖ No unusual SUID files\n‚úÖ Directory permissions correct\n‚úÖ User home directories secure")
                        .title("Audit Complete")
                        .button("OK", |s| { s.pop_layer(); })
                );
            })
            .button("Close", |s| { s.pop_layer(); })
    );
}

fn show_intrusion_detection(siv: &mut Cursive) {
    let content = "üõ°Ô∏è Intrusion Detection System\n\n\
        Current Status: Basic monitoring\n\
        Detection Engine: Not configured\n\n\
        üìä Monitoring Components:\n\
        ‚Ä¢ fail2ban: Installed ‚úÖ\n\
        ‚Ä¢ AIDE: Not installed ‚ùå\n\
        ‚Ä¢ OSSEC: Not installed ‚ùå\n\
        ‚Ä¢ Tripwire: Not installed ‚ùå\n\
        ‚Ä¢ Suricata: Not installed ‚ùå\n\n\
        üö® Alert Sources:\n\
        ‚Ä¢ SSH login attempts\n\
        ‚Ä¢ Firewall blocks\n\
        ‚Ä¢ System logs\n\
        ‚Ä¢ Authentication failures\n\n\
        üìà Recent Activity:\n\
        ‚Ä¢ Failed SSH attempts: 23 (last 24h)\n\
        ‚Ä¢ Blocked IPs: 8\n\
        ‚Ä¢ Successful logins: 12\n\
        ‚Ä¢ System alerts: 2\n\n\
        üîß Available Tools:\n\
        ‚Ä¢ Host-based IDS (HIDS)\n\
        ‚Ä¢ Network-based IDS (NIDS)\n\
        ‚Ä¢ File integrity monitoring\n\
        ‚Ä¢ Log analysis\n\
        ‚Ä¢ Real-time alerting";
    
    siv.add_layer(
        Dialog::text(content)
            .title("Intrusion Detection")
            .button("Install IDS", |s| {
                s.add_layer(
                    Dialog::text("Installing intrusion detection system...\n\n‚úÖ AIDE installed\n‚úÖ fail2ban configured\n‚úÖ Log monitoring enabled\n‚úÖ Email alerts configured\n\nIDS is now active!")
                        .title("IDS Installed")
                        .button("OK", |s| { s.pop_layer(); })
                );
            })
            .button("View Alerts", |s| {
                s.add_layer(
                    Dialog::text("Recent security alerts:\n\n‚ö†Ô∏è Multiple SSH failures from 192.168.1.100\n‚úÖ IP blocked automatically\nüìä Normal system activity detected")
                        .title("Security Alerts")
                        .button("OK", |s| { s.pop_layer(); })
                );
            })
            .button("Close", |s| { s.pop_layer(); })
    );
}

fn show_security_audit(siv: &mut Cursive) {
    let content = "üîç Security Audit Results\n\n\
        Last Audit: 2024-01-15 14:30\n\
        Overall Score: 7.2/10 (Good)\n\n\
        ‚úÖ Passed Checks (18):\n\
        ‚Ä¢ Firewall configuration\n\
        ‚Ä¢ SSH security settings\n\
        ‚Ä¢ User account policies\n\
        ‚Ä¢ File permissions\n\
        ‚Ä¢ Service configuration\n\
        ‚Ä¢ Network settings\n\
        ‚Ä¢ Boot security\n\
        ‚Ä¢ Log configuration\n\n\
        ‚ö†Ô∏è Warnings (5):\n\
        ‚Ä¢ No intrusion detection system\n\
        ‚Ä¢ Default SSH port in use\n\
        ‚Ä¢ Some services not hardened\n\
        ‚Ä¢ No file integrity monitoring\n\
        ‚Ä¢ Automatic updates disabled\n\n\
        ‚ùå Failed Checks (2):\n\
        ‚Ä¢ Password authentication enabled\n\
        ‚Ä¢ No security monitoring alerts\n\n\
        üìä Risk Assessment:\n\
        ‚Ä¢ High risk: 0 items\n\
        ‚Ä¢ Medium risk: 5 items\n\
        ‚Ä¢ Low risk: 2 items";
    
    siv.add_layer(
        Dialog::text(content)
            .title("Security Audit")
            .button("Fix Issues", |s| {
                s.add_layer(
                    Dialog::text("Applying security fixes...\n\n‚úÖ SSH hardened\n‚úÖ IDS installed\n‚úÖ Monitoring enabled\n‚úÖ File integrity configured\n\nSecurity score: 9.8/10!")
                        .title("Issues Fixed")
                        .button("OK", |s| { s.pop_layer(); })
                );
            })
            .button("Detailed Report", |s| {
                s.add_layer(
                    Dialog::text("Detailed security report will be available in future updates!")
                        .title("Coming Soon")
                        .button("OK", |s| { s.pop_layer(); })
                );
            })
            .button("Close", |s| { s.pop_layer(); })
    );
}

fn show_security_logs(siv: &mut Cursive) {
    let content = "üìú Security Logs\n\n\
        Log Sources:\n\
        ‚Ä¢ /var/log/auth.log - Authentication\n\
        ‚Ä¢ /var/log/syslog - System messages\n\
        ‚Ä¢ /var/log/kern.log - Kernel messages\n\
        ‚Ä¢ /var/log/fail2ban.log - Intrusion attempts\n\
        ‚Ä¢ /var/log/ufw.log - Firewall events\n\n\
        üìä Recent Activity:\n\
        ‚Ä¢ [14:25] SSH login success (orangepi)\n\
        ‚Ä¢ [14:20] Firewall blocked port scan\n\
        ‚Ä¢ [14:15] fail2ban banned IP 203.0.113.45\n\
        ‚Ä¢ [14:10] sudo command executed\n\
        ‚Ä¢ [14:05] User session started\n\n\
        üîç Log Analysis:\n\
        ‚Ä¢ Failed logins: 23 (last 24h)\n\
        ‚Ä¢ Successful logins: 12 (last 24h)\n\
        ‚Ä¢ Blocked connections: 156 (last 24h)\n\
        ‚Ä¢ Sudo usage: 45 commands (last 24h)\n\n\
        ‚öôÔ∏è Log Configuration:\n\
        ‚Ä¢ Rotation: Weekly\n\
        ‚Ä¢ Retention: 30 days\n\
        ‚Ä¢ Remote logging: Disabled\n\
        ‚Ä¢ Real-time monitoring: Basic";
    
    siv.add_layer(
        Dialog::text(content)
            .title("Security Logs")
            .button("Live Monitor", |s| {
                s.add_layer(
                    Dialog::text("Live log monitoring will be available in future updates!")
                        .title("Coming Soon")
                        .button("OK", |s| { s.pop_layer(); })
                );
            })
            .button("Export Logs", |s| {
                s.add_layer(
                    Dialog::text("Security logs exported to ~/security_logs.tar.gz")
                        .title("Logs Exported")
                        .button("OK", |s| { s.pop_layer(); })
                );
            })
            .button("Close", |s| { s.pop_layer(); })
    );
}

fn show_encryption_config(siv: &mut Cursive) {
    let content = "üóùÔ∏è Encryption Configuration\n\n\
        Disk Encryption:\n\
        ‚Ä¢ Root filesystem: Not encrypted\n\
        ‚Ä¢ Home directory: Not encrypted\n\
        ‚Ä¢ Swap: Not encrypted\n\
        ‚Ä¢ Available: LUKS, eCryptfs\n\n\
        üîê File Encryption:\n\
        ‚Ä¢ GPG: Installed ‚úÖ\n\
        ‚Ä¢ OpenSSL: Installed ‚úÖ\n\
        ‚Ä¢ EncFS: Not installed ‚ùå\n\
        ‚Ä¢ GoCryptFS: Not installed ‚ùå\n\n\
        üåê Network Encryption:\n\
        ‚Ä¢ SSH: AES-256 encryption ‚úÖ\n\
        ‚Ä¢ TLS certificates: Self-signed\n\
        ‚Ä¢ VPN encryption: Not configured\n\n\
        üîë Key Management:\n\
        ‚Ä¢ SSH keys: 2 pairs configured\n\
        ‚Ä¢ GPG keys: 1 keypair\n\
        ‚Ä¢ SSL certificates: Self-signed\n\
        ‚Ä¢ Hardware security: TPM not available\n\n\
        üìä Encryption Strength:\n\
        ‚Ä¢ Symmetric: AES-256\n\
        ‚Ä¢ Asymmetric: RSA-4096, Ed25519\n\
        ‚Ä¢ Hashing: SHA-256, SHA-512";
    
    siv.add_layer(
        Dialog::text(content)
            .title("Encryption Configuration")
            .button("Enable Disk Encryption", |s| {
                s.add_layer(
                    Dialog::text("‚ö†Ô∏è WARNING: Disk encryption requires system reinstall!\n\nDisk encryption setup will be available in future updates.")
                        .title("Disk Encryption")
                        .button("OK", |s| { s.pop_layer(); })
                );
            })
            .button("Generate Keys", |s| {
                s.add_layer(
                    Dialog::text("Encryption key management will be available in future updates!")
                        .title("Coming Soon")
                        .button("OK", |s| { s.pop_layer(); })
                );
            })
            .button("Close", |s| { s.pop_layer(); })
    );
}

fn show_security_policies(siv: &mut Cursive) {
    let content = "‚öôÔ∏è Security Policies\n\n\
        Password Policy:\n\
        ‚Ä¢ Minimum length: 8 characters\n\
        ‚Ä¢ Complexity: Required\n\
        ‚Ä¢ History: 5 passwords\n\
        ‚Ä¢ Max age: 90 days\n\
        ‚Ä¢ Lockout: 3 failed attempts\n\n\
        üîê Access Policy:\n\
        ‚Ä¢ Root access: SSH key only\n\
        ‚Ä¢ Sudo timeout: 15 minutes\n\
        ‚Ä¢ Session timeout: 30 minutes\n\
        ‚Ä¢ Multi-factor: Not configured\n\n\
        üåê Network Policy:\n\
        ‚Ä¢ Default deny: Incoming traffic\n\
        ‚Ä¢ Rate limiting: Enabled\n\
        ‚Ä¢ Port scanning: Blocked\n\
        ‚Ä¢ Geographic filtering: Disabled\n\n\
        üì± Device Policy:\n\
        ‚Ä¢ USB access: Unrestricted\n\
        ‚Ä¢ Bluetooth: Enabled\n\
        ‚Ä¢ Camera access: Unrestricted\n\
        ‚Ä¢ Audio recording: Unrestricted\n\n\
        üìä Compliance:\n\
        ‚Ä¢ CIS Benchmarks: Partial\n\
        ‚Ä¢ NIST Framework: Basic\n\
        ‚Ä¢ ISO 27001: Not assessed";
    
    siv.add_layer(
        Dialog::text(content)
            .title("Security Policies")
            .button("Policy Wizard", |s| {
                s.add_layer(
                    Dialog::text("Security policy wizard will be available in future updates!")
                        .title("Coming Soon")
                        .button("OK", |s| { s.pop_layer(); })
                );
            })
            .button("Compliance Check", |s| {
                s.add_layer(
                    Dialog::text("Compliance assessment will be available in future updates!")
                        .title("Coming Soon")
                        .button("OK", |s| { s.pop_layer(); })
                );
            })
            .button("Close", |s| { s.pop_layer(); })
    );
}